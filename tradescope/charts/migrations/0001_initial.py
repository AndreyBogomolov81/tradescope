# Generated by Django 5.2.3 on 2025-08-27 15:15

import charts.models.crypto_bybit_models
import django.contrib.postgres.fields
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="CategoryBybit",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=50)),
                ("system_mark", models.CharField(max_length=50)),
                ("description", models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name="CategoryOKX",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=50)),
                ("system_mark", models.CharField(max_length=50)),
                ("description", models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name="InstrumentBybitInverse",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("symbol", models.CharField(max_length=50, unique=True)),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["symbol"], name="charts_inst_symbol_8ff74a_idx"
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="InfoBybitInverse",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("baseCoin", models.CharField(max_length=50)),
                ("quoteCoin", models.CharField(max_length=50)),
                ("status", models.CharField(max_length=50)),
                ("lotSizeFilter", models.JSONField()),
                ("priceFilter", models.JSONField()),
                ("settleCoin", models.CharField(max_length=50)),
                ("launchTime", models.CharField(max_length=50)),
                ("deliveryTime", models.CharField(blank=True, max_length=50)),
                ("deliveryFeeRate", models.CharField(max_length=50)),
                ("displayName", models.CharField(blank=True, max_length=50, null=True)),
                ("contractType", models.CharField(max_length=100)),
                ("priceScale", models.CharField(max_length=50)),
                ("unifiedMarginTrade", models.BooleanField()),
                ("fundingInterval", models.IntegerField()),
                ("copyTrading", models.CharField(max_length=50)),
                ("upperFundingRate", models.CharField(max_length=50)),
                ("lowerFundingRate", models.CharField(max_length=50)),
                ("isPreListing", models.BooleanField()),
                (
                    "preListingInfo",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("leverageFilter", models.JSONField()),
                ("riskParameters", models.JSONField()),
                (
                    "inst",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="inverse_bybit",
                        to="charts.instrumentbybitinverse",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="InstrumentBybitLinear",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("symbol", models.CharField(max_length=50, unique=True)),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["symbol"], name="charts_inst_symbol_50b0e5_idx"
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="InfoBybitLinear",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("baseCoin", models.CharField(max_length=50)),
                ("quoteCoin", models.CharField(max_length=50)),
                ("status", models.CharField(max_length=50)),
                ("lotSizeFilter", models.JSONField()),
                ("priceFilter", models.JSONField()),
                ("settleCoin", models.CharField(max_length=50)),
                ("launchTime", models.CharField(max_length=50)),
                ("deliveryTime", models.CharField(blank=True, max_length=50)),
                ("deliveryFeeRate", models.CharField(max_length=50)),
                ("displayName", models.CharField(blank=True, max_length=50, null=True)),
                ("contractType", models.CharField(max_length=100)),
                ("priceScale", models.CharField(max_length=50)),
                ("unifiedMarginTrade", models.BooleanField()),
                ("fundingInterval", models.IntegerField()),
                ("copyTrading", models.CharField(max_length=50)),
                ("upperFundingRate", models.CharField(max_length=50)),
                ("lowerFundingRate", models.CharField(max_length=50)),
                ("isPreListing", models.BooleanField()),
                (
                    "preListingInfo",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("leverageFilter", models.JSONField()),
                ("riskParameters", models.JSONField()),
                (
                    "inst",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="linear_bybit",
                        to="charts.instrumentbybitlinear",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="InstrumentBybitOption",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("symbol", models.CharField(max_length=50, unique=True)),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["symbol"], name="charts_inst_symbol_52ec4c_idx"
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="InfoBybitOptions",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("baseCoin", models.CharField(max_length=50)),
                ("quoteCoin", models.CharField(max_length=50)),
                ("status", models.CharField(max_length=50)),
                ("lotSizeFilter", models.JSONField()),
                ("priceFilter", models.JSONField()),
                ("settleCoin", models.CharField(max_length=50)),
                ("launchTime", models.CharField(max_length=50)),
                ("deliveryTime", models.CharField(blank=True, max_length=50)),
                ("deliveryFeeRate", models.CharField(max_length=50)),
                ("displayName", models.CharField(blank=True, max_length=50, null=True)),
                ("optionsType", models.CharField(max_length=50)),
                (
                    "inst",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="options_bybit",
                        to="charts.instrumentbybitoption",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="InstrumentBybitSpot",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("symbol", models.CharField(max_length=50, unique=True)),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["symbol"], name="charts_inst_symbol_e144de_idx"
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="InfoBybitSpot",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("baseCoin", models.CharField(max_length=50)),
                ("quoteCoin", models.CharField(max_length=50)),
                ("status", models.CharField(max_length=50)),
                ("lotSizeFilter", models.JSONField()),
                ("priceFilter", models.JSONField()),
                ("innovation", models.CharField(max_length=50)),
                ("marginTrading", models.CharField(max_length=50)),
                ("stTag", models.CharField(max_length=50)),
                ("riskParameters", models.JSONField()),
                (
                    "inst",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="spot_bybit",
                        to="charts.instrumentbybitspot",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="InstrumentOKXFutures",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("instId", models.CharField(max_length=50, unique=True)),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["instId"], name="charts_inst_instId_4dc5d2_idx"
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="InfoOKXFutures",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("baseCcy", models.CharField(max_length=50)),
                ("quoteCcy", models.CharField(max_length=50)),
                ("alias", models.CharField(blank=True, max_length=50)),
                ("auctionEndTime", models.CharField(blank=True, max_length=50)),
                ("category", models.CharField(blank=True, max_length=50)),
                ("contTdSwTime", models.CharField(blank=True, max_length=50)),
                ("ctMult", models.CharField(blank=True, max_length=50)),
                ("ctType", models.CharField(blank=True, max_length=50)),
                ("ctVal", models.CharField(blank=True, max_length=50)),
                ("ctValCcy", models.CharField(blank=True, max_length=50)),
                ("expTime", models.CharField(blank=True, max_length=50)),
                ("futureSettlement", models.BooleanField()),
                ("instFamily", models.CharField(blank=True, max_length=50)),
                ("instIdCode", models.IntegerField()),
                ("instType", models.CharField(blank=True, max_length=50)),
                ("lever", models.CharField(blank=True, max_length=50)),
                ("listTime", models.CharField(blank=True, max_length=50)),
                ("lotSz", models.CharField(blank=True, max_length=50)),
                ("maxIcebergSz", models.CharField(blank=True, max_length=50)),
                ("maxLmtAmt", models.CharField(blank=True, max_length=50)),
                ("maxLmtSz", models.CharField(blank=True, max_length=50)),
                ("maxMktAmt", models.CharField(blank=True, max_length=50)),
                ("maxMktSz", models.CharField(blank=True, max_length=50)),
                ("maxStopSz", models.CharField(blank=True, max_length=50)),
                ("maxTriggerSz", models.CharField(blank=True, max_length=50)),
                ("maxTwapSz", models.CharField(blank=True, max_length=50)),
                ("minSz", models.CharField(blank=True, max_length=50)),
                ("openType", models.CharField(blank=True, max_length=50)),
                ("optType", models.CharField(blank=True, max_length=50)),
                ("ruleType", models.CharField(blank=True, max_length=50)),
                ("settleCcy", models.CharField(blank=True, max_length=50)),
                ("state", models.CharField(blank=True, max_length=50)),
                ("stk", models.CharField(blank=True, max_length=50)),
                ("tickSz", models.CharField(blank=True, max_length=50)),
                ("uly", models.CharField(blank=True, max_length=50)),
                (
                    "tradeQuoteCcyList",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=20), size=None
                    ),
                ),
                (
                    "inst",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="futures_okx",
                        to="charts.instrumentokxfutures",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="InstrumentOKXMargin",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("instId", models.CharField(max_length=50, unique=True)),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["instId"], name="charts_inst_instId_8eade6_idx"
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="InfoOKXMargin",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("baseCcy", models.CharField(max_length=50)),
                ("quoteCcy", models.CharField(max_length=50)),
                ("alias", models.CharField(blank=True, max_length=50)),
                ("auctionEndTime", models.CharField(blank=True, max_length=50)),
                ("category", models.CharField(blank=True, max_length=50)),
                ("contTdSwTime", models.CharField(blank=True, max_length=50)),
                ("ctMult", models.CharField(blank=True, max_length=50)),
                ("ctType", models.CharField(blank=True, max_length=50)),
                ("ctVal", models.CharField(blank=True, max_length=50)),
                ("ctValCcy", models.CharField(blank=True, max_length=50)),
                ("expTime", models.CharField(blank=True, max_length=50)),
                ("futureSettlement", models.BooleanField()),
                ("instFamily", models.CharField(blank=True, max_length=50)),
                ("instIdCode", models.IntegerField()),
                ("instType", models.CharField(blank=True, max_length=50)),
                ("lever", models.CharField(blank=True, max_length=50)),
                ("listTime", models.CharField(blank=True, max_length=50)),
                ("lotSz", models.CharField(blank=True, max_length=50)),
                ("maxIcebergSz", models.CharField(blank=True, max_length=50)),
                ("maxLmtAmt", models.CharField(blank=True, max_length=50)),
                ("maxLmtSz", models.CharField(blank=True, max_length=50)),
                ("maxMktAmt", models.CharField(blank=True, max_length=50)),
                ("maxMktSz", models.CharField(blank=True, max_length=50)),
                ("maxStopSz", models.CharField(blank=True, max_length=50)),
                ("maxTriggerSz", models.CharField(blank=True, max_length=50)),
                ("maxTwapSz", models.CharField(blank=True, max_length=50)),
                ("minSz", models.CharField(blank=True, max_length=50)),
                ("openType", models.CharField(blank=True, max_length=50)),
                ("optType", models.CharField(blank=True, max_length=50)),
                ("ruleType", models.CharField(blank=True, max_length=50)),
                ("settleCcy", models.CharField(blank=True, max_length=50)),
                ("state", models.CharField(blank=True, max_length=50)),
                ("stk", models.CharField(blank=True, max_length=50)),
                ("tickSz", models.CharField(blank=True, max_length=50)),
                ("uly", models.CharField(blank=True, max_length=50)),
                (
                    "tradeQuoteCcyList",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=20), size=None
                    ),
                ),
                (
                    "inst",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="margin_okx",
                        to="charts.instrumentokxmargin",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="InstrumentOKXSpot",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("instId", models.CharField(max_length=50, unique=True)),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["instId"], name="charts_inst_instId_9c7a95_idx"
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="InfoOKXSpot",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("baseCcy", models.CharField(max_length=50)),
                ("quoteCcy", models.CharField(max_length=50)),
                ("alias", models.CharField(blank=True, max_length=50)),
                ("auctionEndTime", models.CharField(blank=True, max_length=50)),
                ("category", models.CharField(blank=True, max_length=50)),
                ("contTdSwTime", models.CharField(blank=True, max_length=50)),
                ("ctMult", models.CharField(blank=True, max_length=50)),
                ("ctType", models.CharField(blank=True, max_length=50)),
                ("ctVal", models.CharField(blank=True, max_length=50)),
                ("ctValCcy", models.CharField(blank=True, max_length=50)),
                ("expTime", models.CharField(blank=True, max_length=50)),
                ("futureSettlement", models.BooleanField()),
                ("instFamily", models.CharField(blank=True, max_length=50)),
                ("instIdCode", models.IntegerField()),
                ("instType", models.CharField(blank=True, max_length=50)),
                ("lever", models.CharField(blank=True, max_length=50)),
                ("listTime", models.CharField(blank=True, max_length=50)),
                ("lotSz", models.CharField(blank=True, max_length=50)),
                ("maxIcebergSz", models.CharField(blank=True, max_length=50)),
                ("maxLmtAmt", models.CharField(blank=True, max_length=50)),
                ("maxLmtSz", models.CharField(blank=True, max_length=50)),
                ("maxMktAmt", models.CharField(blank=True, max_length=50)),
                ("maxMktSz", models.CharField(blank=True, max_length=50)),
                ("maxStopSz", models.CharField(blank=True, max_length=50)),
                ("maxTriggerSz", models.CharField(blank=True, max_length=50)),
                ("maxTwapSz", models.CharField(blank=True, max_length=50)),
                ("minSz", models.CharField(blank=True, max_length=50)),
                ("openType", models.CharField(blank=True, max_length=50)),
                ("optType", models.CharField(blank=True, max_length=50)),
                ("ruleType", models.CharField(blank=True, max_length=50)),
                ("settleCcy", models.CharField(blank=True, max_length=50)),
                ("state", models.CharField(blank=True, max_length=50)),
                ("stk", models.CharField(blank=True, max_length=50)),
                ("tickSz", models.CharField(blank=True, max_length=50)),
                ("uly", models.CharField(blank=True, max_length=50)),
                (
                    "tradeQuoteCcyList",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=20), size=None
                    ),
                ),
                (
                    "inst",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="spot_okx",
                        to="charts.instrumentokxspot",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="InstrumentOKXSwap",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("instId", models.CharField(max_length=50, unique=True)),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["instId"], name="charts_inst_instId_81a061_idx"
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="InfoOKXSwap",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("baseCcy", models.CharField(max_length=50)),
                ("quoteCcy", models.CharField(max_length=50)),
                ("alias", models.CharField(blank=True, max_length=50)),
                ("auctionEndTime", models.CharField(blank=True, max_length=50)),
                ("category", models.CharField(blank=True, max_length=50)),
                ("contTdSwTime", models.CharField(blank=True, max_length=50)),
                ("ctMult", models.CharField(blank=True, max_length=50)),
                ("ctType", models.CharField(blank=True, max_length=50)),
                ("ctVal", models.CharField(blank=True, max_length=50)),
                ("ctValCcy", models.CharField(blank=True, max_length=50)),
                ("expTime", models.CharField(blank=True, max_length=50)),
                ("futureSettlement", models.BooleanField()),
                ("instFamily", models.CharField(blank=True, max_length=50)),
                ("instIdCode", models.IntegerField()),
                ("instType", models.CharField(blank=True, max_length=50)),
                ("lever", models.CharField(blank=True, max_length=50)),
                ("listTime", models.CharField(blank=True, max_length=50)),
                ("lotSz", models.CharField(blank=True, max_length=50)),
                ("maxIcebergSz", models.CharField(blank=True, max_length=50)),
                ("maxLmtAmt", models.CharField(blank=True, max_length=50)),
                ("maxLmtSz", models.CharField(blank=True, max_length=50)),
                ("maxMktAmt", models.CharField(blank=True, max_length=50)),
                ("maxMktSz", models.CharField(blank=True, max_length=50)),
                ("maxStopSz", models.CharField(blank=True, max_length=50)),
                ("maxTriggerSz", models.CharField(blank=True, max_length=50)),
                ("maxTwapSz", models.CharField(blank=True, max_length=50)),
                ("minSz", models.CharField(blank=True, max_length=50)),
                ("openType", models.CharField(blank=True, max_length=50)),
                ("optType", models.CharField(blank=True, max_length=50)),
                ("ruleType", models.CharField(blank=True, max_length=50)),
                ("settleCcy", models.CharField(blank=True, max_length=50)),
                ("state", models.CharField(blank=True, max_length=50)),
                ("stk", models.CharField(blank=True, max_length=50)),
                ("tickSz", models.CharField(blank=True, max_length=50)),
                ("uly", models.CharField(blank=True, max_length=50)),
                (
                    "tradeQuoteCcyList",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=20), size=None
                    ),
                ),
                (
                    "inst",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="swap_okx",
                        to="charts.instrumentokxswap",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="HistoricalDataBybitInverse",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("start_date", models.FloatField()),
                ("end_date", models.FloatField()),
                ("interval", models.CharField(max_length=50)),
                ("total_count", models.IntegerField()),
                (
                    "data",
                    models.FileField(
                        upload_to=charts.models.crypto_bybit_models.historical_data_inverse_dir_path
                    ),
                ),
                (
                    "inst",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="hist_inverse_bybit",
                        to="charts.instrumentbybitinverse",
                    ),
                ),
            ],
            options={
                "ordering": ["start_date"],
                "indexes": [
                    models.Index(
                        fields=["start_date", "end_date", "interval"],
                        name="charts_hist_start_d_d67c10_idx",
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="CandleBybitInverse",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("time", models.FloatField()),
                ("open", models.FloatField()),
                ("high", models.FloatField()),
                ("low", models.FloatField()),
                ("close", models.FloatField()),
                ("volume", models.FloatField()),
                ("turnover", models.FloatField()),
                ("interval", models.CharField(max_length=10)),
                ("first_candle", models.BooleanField(default=False)),
                ("last_candle", models.BooleanField(default=False)),
                (
                    "inst",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="candles_inverse_bybit",
                        to="charts.instrumentbybitinverse",
                    ),
                ),
            ],
            options={
                "ordering": ["time"],
                "indexes": [
                    models.Index(fields=["time"], name="charts_cand_time_4ce5ac_idx")
                ],
                "constraints": [
                    models.UniqueConstraint(
                        fields=("time", "inst", "interval"),
                        name="unique_inverse_startTime_inst_interval",
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="HistoricalDataBybitLinear",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("start_date", models.FloatField()),
                ("end_date", models.FloatField()),
                ("interval", models.CharField(max_length=50)),
                ("total_count", models.IntegerField()),
                (
                    "data",
                    models.FileField(
                        upload_to=charts.models.crypto_bybit_models.historical_data_linear_dir_path
                    ),
                ),
                (
                    "inst",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="hist_linear_bybit",
                        to="charts.instrumentbybitlinear",
                    ),
                ),
            ],
            options={
                "ordering": ["start_date"],
                "indexes": [
                    models.Index(
                        fields=["start_date", "end_date", "interval"],
                        name="charts_hist_start_d_f010de_idx",
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="CandleBybitLinear",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("time", models.FloatField()),
                ("open", models.FloatField()),
                ("high", models.FloatField()),
                ("low", models.FloatField()),
                ("close", models.FloatField()),
                ("volume", models.FloatField()),
                ("turnover", models.FloatField()),
                ("interval", models.CharField(max_length=10)),
                ("first_candle", models.BooleanField(default=False)),
                ("last_candle", models.BooleanField(default=False)),
                (
                    "inst",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="candles_linear_bybit",
                        to="charts.instrumentbybitlinear",
                    ),
                ),
            ],
            options={
                "ordering": ["time"],
                "indexes": [
                    models.Index(fields=["time"], name="charts_cand_time_d6592a_idx")
                ],
                "constraints": [
                    models.UniqueConstraint(
                        fields=("time", "inst", "interval"),
                        name="unique_linear_startTime_inst_interval",
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="HistoricalDataBybitSpot",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("start_date", models.FloatField()),
                ("end_date", models.FloatField()),
                ("interval", models.CharField(max_length=50)),
                ("total_count", models.IntegerField()),
                (
                    "data",
                    models.FileField(
                        upload_to=charts.models.crypto_bybit_models.historical_data_spot_dir_path
                    ),
                ),
                (
                    "inst",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="hist_spot_bybit",
                        to="charts.instrumentbybitspot",
                    ),
                ),
            ],
            options={
                "ordering": ["start_date"],
                "indexes": [
                    models.Index(
                        fields=["start_date", "end_date", "interval"],
                        name="charts_hist_start_d_1aa670_idx",
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="CandleBybitSpot",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("time", models.FloatField()),
                ("open", models.FloatField()),
                ("high", models.FloatField()),
                ("low", models.FloatField()),
                ("close", models.FloatField()),
                ("volume", models.FloatField()),
                ("turnover", models.FloatField()),
                ("interval", models.CharField(max_length=10)),
                ("first_candle", models.BooleanField(default=False)),
                ("last_candle", models.BooleanField(default=False)),
                (
                    "inst",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="candles_spot_bybit",
                        to="charts.instrumentbybitspot",
                    ),
                ),
            ],
            options={
                "ordering": ["time"],
                "indexes": [
                    models.Index(fields=["time"], name="charts_cand_time_08a214_idx")
                ],
                "constraints": [
                    models.UniqueConstraint(
                        fields=("time", "inst", "interval"),
                        name="unique_spot_startTime_inst_interval",
                    )
                ],
            },
        ),
    ]
